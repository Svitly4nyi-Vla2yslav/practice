//? –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–≥–æ –≤–∏–∫–ª–∏–∫—É (callback)
//? - –§—É–Ω–∫—Ü—ñ—è –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ –¥—Ä—É–≥—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏.
//? - –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –¥—Ä—É–≥—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞–∑–∏–≤–∞–µ—Ç—å—Å—è "—Ñ—É–Ω–∫—Ü—ñ—è
//? –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–≥–æ (–≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ–≥–æ)–≤–∏–∫–ª–∏–∫—É"(callback-—Ñ—É–Ω–∫—Ü—ñ—è).
//? - –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥—Ä—É–≥—É —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –∞–±–æ –ø–æ–≤–µ—Ä—Ç–∞—î —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
//? —Å–≤–æ—î—ó —Ä–æ–±–æ—Ç–∏ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è "—Ñ—É–Ω–∫—Ü—ñ—î—é –≤–∏—Å—à–æ–≥–æ –ø–æ—Ä—è–¥–∫—É".

// const fnA = function (message, callback) {
//     console.log(message)
//     console.log(callback);
//     callback(100);
// }
// const fnb = function (number) {
//     console.log('—Ü–µ –ª–æ–≥ –¥–ª—è –≤–∏–∫–ª–∏–∫—É fnB', number)
// }
// fnA('hallo', fnb);
// !------------------------------------------------------------------------------------------
// const doMath = function (a, b, callback) {
//     const result = callback(a, b);
//     console.log(result);
// };
// const add = function (x, y) {
//     return x + y;
// };
// const sub = function (x, y) {
//   return x - y;
// };
// doMath(10, 8, sub);
// doMath(2, 3, add);
// ? —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø–æ–¥—ñ–π
// const buttonRef = document.querySelector('.js-button');
// console.log(buttonRef);
// const handleBtnClick = function () {
//     console.log('–ö–ª—ñ–∫ –ø–æ –∫–Ω–æ–ø—Ü—ñ' + Date.now());
// };
// buttonRef.addEventListener('click', handleBtnClick);
//? –í—ñ–¥–ª–æ–∂–µ–Ω–Ω–∏–π –≤–∏–∫–ª–∏–∫
// const onGetPositionSucces = function (position) {
//     console.log(position);
// };
// const onGetPositionError = function (error) {
//   console.log(error);
// };
// window.navigator.geolocation.getCurrentPosition(
//     onGetPositionError,
//     onGetPositionSucces,
// );
// ? –í—ñ–¥–ª–æ–∂–µ–Ω–∏–π –≤–∏–∫–ª–∏–∫: —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏.
// const callback = function () {
//     console.log('—á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏ –ø–µ—Ä–µ–¥ —Ç–∞–π–º–∞—É—Ç–æ–º');
// };
// console.log('–í –∫–æ–¥—ñ –ø–µ—Ä–µ–¥ —Ç–∞–π–º–∞—É—Ç–æ–º');
// setTimeout(callback, 3000);
// console.log('–í –∫–æ–¥—ñ –ø—ñ—Å–ª—è —Ç–∞–π–º–∞—É—Ç–∞');

// ? ----------------–§—ñ–ª—å—Ç—Ä------------------
// const filter = function (array, test) {
//     const filteredArray = [];
//     for (const el of array){
//     console.log(el);
//     const passed = test(el);
//     if (passed) {
// filteredArray.push(el);
//     }
//     };
//     return filteredArray;
// };
// // ? 1. –ù–∞–¥–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é 
// // ? 2. –§—É–Ω–∫—Ü—ñ—è –ø–æ–ª—É—á–∞—î –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞
// // ? 3. –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞ –∑–∞–¥–æ–≤—ñ–ª—å–Ω—è—î —É–º–æ–≤—É —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ 'true'.
// // ? 4. –Ø–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤–∞ –ù–ï –∑–∞–¥–æ–≤—ñ–ª—å–Ω—è—î —É–º–æ–≤—É —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ 'false'
// const callback1 = function (value) {
//     return value >=3;
// }
// const result1 = filter([1, 2, 3, 4, 5], callback1);

// console.log(result1);
// const callback2 = function (value){
//     return value <= 4;
// };
// const result2 = filter([1, 2, 3, 4, 5, 6, 7, 8], callback2);

// console.log(result2);

// const fruits = [
//    { name: 'üçé', quantity: 200, isFresh: true},
//    { name: 'üçá', quantity: 150, isFresh: false},
//    { name: 'üçå', quantity: 100, isFresh: true},
// ];
// const getFruitsWithQuantity = function (fruit) {
//     return fruit.quantity >= 120;
// };
// const result3 = filter(fruits, getFruitsWithQuantity);
// console.log(result3)

// ?---------------–ó–∞–º–∏–∫–∞–Ω–Ω—è--------------------------
// const fnA = function (parametr){
// const innerVariable = '–ó–Ω–∞—á–µ–Ω–Ω—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–π –∑–º—ñ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü—ñ—ó fnA';
// const innerFunction = function (){
//     console.log(innerVariable);
//     console.log('–¶–µ –≤–∏–∫–ª–∏–∫ innerFunction');
// }
// return innerFunction;
// };
// const fnB = fnA();
// fnB();
// console.log(fnB);